@using Microsoft.AspNetCore.Components.Forms
@using BlazorApp.Database
@inject IJSRuntime JSRuntime

<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Update Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (CurrentEmployee != null)
                {
                    <EditForm Model="@CurrentEmployee" OnValidSubmit="HandleUpdate">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="mb-3">
                            <label for="employeeName" class="form-label">Name</label>
                            <InputText id="employeeName" class="form-control" @bind-Value="CurrentEmployee.EmployeeName" />
                        </div>
                        <div class="mb-3">
                            <label for="jobTitle" class="form-label">Job Title</label>
                            <InputText id="jobTitle" class="form-control" @bind-Value="CurrentEmployee.JobTitle" />
                        </div>
                        <div class="mb-3">
                            <label for="age" class="form-label">Age</label>
                            <InputNumber id="age" class="form-control" @bind-Value="CurrentEmployee.Age" />
                        </div>
                        <div class="mb-3">
                            <label for="gender" class="form-label">Gender</label>
                            <InputText id="gender" class="form-control" @bind-Value="CurrentEmployee.Gender" />
                        </div>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </EditForm>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Employee CurrentEmployee { get; set; }
    [Parameter] public EventCallback<Employee> OnEmployeeUpdated { get; set; }

    private async Task HandleUpdate()
    {
        await OnEmployeeUpdated.InvokeAsync(CurrentEmployee);
        await JSRuntime.InvokeVoidAsync("updateModal.hide");
    }
}
